<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="scripts" name="GenesisII.scripts">

	<target name="build-script-win" if="windows.scripts">
		<copy file="${win-script-src-dir}/${win-script-base-name}.bat"
			tofile="${basedir}/bin/${win-script-base-name}.bat"/>
		<replace file="${basedir}/bin/${win-script-base-name}.bat"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/bin/${win-script-base-name}.bat"
			token="$LOG4JCONFIG" value="build.container.log4j.properties"
			summary="no"/>
		<replace file="${basedir}/bin/${win-script-base-name}.bat"
			token="$CLIENT_LOG4JCONFIG" value="build.client.log4j.properties"
			summary="no"/>
		<antcall target="set-jni">
			<param name="build-target-file" value="${basedir}/bin/${win-script-base-name}.bat"/>
		</antcall>
	</target>

	<target name="build-script-unix" if="unix.scripts">
		<copy file="${unix-script-src-dir}/${unix-script-base-name}"
			tofile="${basedir}/bin/${unix-script-base-name}"/>
		<replace file="${basedir}/bin/${unix-script-base-name}"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/bin/${unix-script-base-name}"
			token="%{LOG4JCONFIG}" value="build.container.log4j.properties"
			summary="no"/>
		<replace file="${basedir}/bin/${unix-script-base-name}"
			token="%{CLIENT_LOG4JCONFIG}" value="build.client.log4j.properties"
			summary="no"/>
		<antcall target="set-jni">
			<param name="build-target-file" value="${basedir}/bin/${unix-script-base-name}"/>
		</antcall>
		
		<antcall target="set-mac-java">
                        <param name="build-target-file" value="${basedir}/bin/${unix-script-base-name}"/>
        </antcall>
		
		<chmod file="${basedir}/bin/${unix-script-base-name}" perm="755"/>
	</target>
	
	<target name="set-mac-java" if="mac.scripts">
		<replace file="${build-target-file}"
                        token="$JAVA_HOME/bin/java" value="java"
                        summary="no"/>
	</target>

	<target name="set-jni">
		<antcall target="jni-lin32" />
		<antcall target="jni-lin64" />
		<antcall target="jni-win32" />
		<antcall target="jni-win64" />
		<antcall target="jni-osx64" />
	</target>

	<target name="jni-lin32" if="linux.32">
		<antcall target="set-jni-replace">
			<param name="build-target-jni" value="jni-libs/lin32"/>
		</antcall>
		<echo message="JNI chosen for 32 bit Linux platform." />
	</target>
	
	<target name="jni-lin64" if="linux.64">
		<antcall target="set-jni-replace">
			<param name="build-target-jni" value="jni-libs/lin64"/>
		</antcall>
		<echo message="JNI chosen for 64 bit Linux platform." />
	</target>
	
	<target name="jni-win32" if="windows.32">
		<antcall target="set-jni-replace">
			<param name="build-target-jni" value="jni-libs/win32"/>
		</antcall>
		<echo message="JNI chosen for 32 bit Windows platform." />
	</target>
	
	<target name="jni-win64" if="windows.64">
		<antcall target="set-jni-replace">
			<param name="build-target-jni" value="jni-libs/win64"/>
		</antcall>
		<echo message="JNI chosen for 64 bit Windows platform." />
	</target>
	
	<target name="jni-osx64" if="mac.scripts">
		<antcall target="set-jni-replace">
			<param name="build-target-jni" value="jni-libs/osx64"/>
		</antcall>
		<echo message="JNI chosen for 64 bit Mac OS-X platform." />
	</target>
	
	<target name="set-jni-replace">
		<replace file="${build-target-file}"
			token="%{GENII_JNI_PATH}" value="${build-target-jni}"
			summary="no"/>
	</target>
		
	
	<target name="build-script">
		<antcall target="build-script-win">
			<param name="win-script-src-dir" value="${script-src-dir}"/>
			<param name="win-script-base-name" value="${script-base-name}"/>
		</antcall>
		<antcall target="build-script-unix">
			<param name="unix-script-src-dir" value="${script-src-dir}"/>
			<param name="unix-script-base-name" value="${script-base-name}"/>
		</antcall>
	</target>
	
	<target name="clean-all-scripts">
		<delete quiet="true">
			<!-- includes old versions of scripts at top. -->
			<fileset dir="${basedir}">
				<include name="runContainer.*"/>
				<include name="cert-tool*"/>
				<include name="gffschown"/>
				<include name="proxyio.launcher"/>
				<include name="set_gffs_vars"/>
			</fileset>
			<!-- new styley has binaries / scripts in bin. -->
			<fileset dir="${basedir}/bin">
				<include name="runContainer.*"/>
				<include name="grid*"/>
				<include name="cert-tool*"/>
				<include name="gffschown"/>
				<include name="proxyio.launcher"/>
			</fileset>
		</delete>
	</target>
		
	<target name="scripts">
		<condition property="unix.scripts">
			<os family="unix"/>
		</condition>
		<condition property="mac.scripts">
			<os family="mac"/>
		</condition>
		<condition property="windows.scripts">
			<os family="windows"/>
		</condition>
		<condition property="linux.scripts">
			<and>
			    <isset property="unix.scripts" />
			    <not>
				<isset property="mac.scripts" />
			    </not>
     			</and>
 		</condition>

		<condition property="linux.64">
			<and>
				<isset property="linux.scripts" />
				<equals arg1="${build.targetArch}" arg2="64"/>
			</and>
		</condition>
		
		<condition property="linux.32">
			<and>
				<isset property="linux.scripts" />
				<equals arg1="${build.targetArch}" arg2="32"/>
			</and>
		</condition>
		
		<condition property="linux.64">
			<and>
				<isset property="linux.scripts" />
				<not>
					<isset property="linux.64" />
				</not>
				<not>
					<isset property="linux.32" />
				</not>
			</and>
    		</condition>

		<condition property="windows.64">
			<and>
				<isset property="windows.scripts" />
				<equals arg1="${build.targetArch}" arg2="64"/>
			</and>
		</condition>
		
		<condition property="windows.32">
			<and>
				<isset property="windows.scripts" />
				<equals arg1="${build.targetArch}" arg2="32"/>
			</and>
		</condition>
		
		<condition property="windows.64">
			<and>
				<isset property="windows.scripts" />
				<not>
					<isset property="windows.64" />
				</not>
				<not>
					<isset property="windows.32" />
				</not>
			</and>
    		</condition>

		<!-- simple copies where we don't have to change the file. -->
		<copy file="${basedir}/toolkit/library/restore_container_state.sh"
			tofile="${basedir}/bin/restore_container_state"/>
		<chmod file="${basedir}/bin/restore_container_state" perm="ugo+rx"/>
		<copy file="${basedir}/toolkit/library/zap_genesis_javas.sh"
			tofile="${basedir}/bin/zap_genesis_javas"/>
		<chmod file="${basedir}/bin/zap_genesis_javas" perm="ugo+rx"/>
		<copy file="${basedir}/toolkit/library/backup_container_state.sh"
			tofile="${basedir}/bin/backup_container_state"/>
		<chmod file="${basedir}/bin/backup_container_state" perm="ugo+rx"/>
		<copy file="${basedir}/toolkit/library/list_genesis_javas.sh"
			tofile="${basedir}/bin/list_genesis_javas"/>
		<chmod file="${basedir}/bin/list_genesis_javas" perm="ugo+rx"/>
		<copy file="${basedir}/toolkit/library/maybe_restart_container.sh"
			tofile="${basedir}/bin/maybe_restart_container"/>
		<chmod file="${basedir}/bin/maybe_restart_container" perm="ugo+rx"/>
		<copy file="${basedir}/toolkit/library/bootstrap_quick_start.sh"
			tofile="${basedir}/bin/bootstrap_quick_start"/>
		<chmod file="${basedir}/bin/bootstrap_quick_start" perm="ugo+rx"/>

		<!-- we copy these files and then munge them afterwards. -->

		<copy file="${scripts.dir}/jar-desc.xml"
			tofile="${basedir}/jar-desc.xml"/>
		<replace file="${basedir}/jar-desc.xml"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>

		<copy file="${scripts.dir}/set_gffs_vars"
			tofile="${basedir}/set_gffs_vars" overwrite="true"/>
		<replace file="${basedir}/set_gffs_vars"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>

		<copy file="${scripts.dir}/genii-base-application.properties"
			tofile="${basedir}/ext/genii-base-application.properties"/>
		<replace file="${basedir}/ext/genii-base-application.properties"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/ext/genii-base-application.properties"
			token="\" value="\\" summary="no"/>
		<replace file="${basedir}/ext/genii-base-application.properties"
			token="${installer:genii.deployment}" value="unspecified" summary="no"/>

		<copy file="${scripts.dir}/genii-container-application.properties"
			tofile="${basedir}/ext/genii-container-application.properties"/>
		<replace file="${basedir}/ext/genii-container-application.properties"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/ext/genii-container-application.properties"
			token="\" value="\\" summary="no"/>

		<copy file="${scripts.dir}/genii-client-application.properties"
			tofile="${basedir}/ext/genii-client-application.properties"/>
		<replace file="${basedir}/ext/genii-client-application.properties"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/ext/genii-client-application.properties"
			token="\" value="\\" summary="no"/>

		<copy file="${scripts.dir}/genii-certtool-application.properties"
			tofile="${basedir}/ext/genii-certtool-application.properties"/>
		<replace file="${basedir}/ext/genii-certtool-application.properties"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/ext/genii-certtool-application.properties"
			token="\" value="\\" summary="no"/>

		<copy file="${scripts.dir}/proxyio.launcher.template"
			tofile="${basedir}/bin/proxyio.launcher"/>
		<replace file="${basedir}/bin/proxyio.launcher"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/bin/proxyio.launcher"
			token="\" value="\\" summary="no"/>
		<chmod file="${basedir}/bin/proxyio.launcher" perm="ugo+rx"/>

		<copy file="${scripts.dir}/gffschown.template"
			tofile="${basedir}/bin/gffschown"/>
		<replace file="${basedir}/bin/gffschown"
			token="${installer:sys.installationDir}" value="${basedir}" summary="no"/>
		<replace file="${basedir}/bin/gffschown"
			token="\" value="\\" summary="no"/>
		<chmod file="${basedir}/bin/gffschown" perm="ugo+rx"/>

		<antcall target="build-script-win">
			<param name="win-script-src-dir" value="${scripts.dir}"/>
			<param name="win-script-base-name" value="runContainer"/>
		</antcall>
		<antcall target="build-script-unix">
			<param name="unix-script-src-dir" value="${scripts.dir}"/>
			<param name="unix-script-base-name" value="runContainer.sh"/>
		</antcall>
		<antcall target="build-script">
			<param name="script-src-dir" value="${scripts.dir}"/>
			<param name="script-base-name" value="grid"/>
		</antcall>
		<antcall target="build-script">
			<param name="script-src-dir" value="${scripts.dir}"/>
			<param name="script-base-name" value="fastgrid"/>
		</antcall>
		<antcall target="build-script">
			<param name="script-src-dir" value="${scripts.dir}"/>
			<param name="script-base-name" value="cert-tool"/>
		</antcall>
		<antcall target="build-script-win">
			<param name="win-script-src-dir" value="${scripts.dir}"/>
			<param name="win-script-base-name" value="windows-start-wrapper"/>
		</antcall>
		<antcall target="build-script-win">
			<param name="win-script-src-dir" value="${scripts.dir}"/>
			<param name="win-script-base-name" value="windows-cmd-runner"/>
		</antcall>
	</target>

</project>
