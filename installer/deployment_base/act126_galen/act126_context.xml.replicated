<?xml version="1.0" encoding="UTF-8"?><ns1:context-information xsi:type="ns2:ContextType" xmlns:ns1="http://vcgr.cs.virginia.edu/Genesis-II" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="http://vcgr.cs.virginia.edu/genii/2006/12/context">
 <ns2:property name="__$$Current Path$$" value="" xsi:type="ns2:ContextNameValuePairType"/>
</ns1:context-information>
