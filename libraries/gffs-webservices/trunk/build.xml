<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="gffs-webservices">

	<!-- Properties -->
	<property environment="env"/>
	<property file="${basedir}/build.properties"/>
	<property name="project.dir" value="${basedir}"/>

	<condition property="wsdl.source.prefix" value="" else="file:///">
		<matches string="${java.specification.version}" pattern="^1\.5$"/>
	</condition>

	<!-- Static Class paths -->

	<path id="axis.classpath">
			<fileset dir="${axis.home}" includes="**/*.jar"/>
	</path>

	<path id="bundles.classpath">
		<fileset dir="${bundles.home}" includes="com.jcraft.jsch*.jar"/>
		<fileset dir="${bundles.home}" includes="org.eclipse.osgi*.jar"/>
		<fileset dir="${bundles.home}" includes="org.apache.commons.logging*.jar"/>
		<fileset dir="${bundles.home}" includes="org.apache.xalan*.jar"/>
		<fileset dir="${bundles.home}" includes="org.apache.xml.serializer*.jar"/>
		<fileset dir="${bundles.home}" includes="org.apache.xerces*.jar"/>
		<fileset dir="${bundles.home}" includes="org.apache.commons.lang*.jar"/>
		<fileset dir="${bundles.home}" includes="org.apache.log4j*.jar"/>
		<fileset dir="${bundles.home}" includes="org.slf4j*.jar"/>
	</path>

	<path id="ext.classpath">
		<fileset dir="${ext.dir}" includes="*.jar"/>
	</path>

	<path id="project.classpath">
		<pathelement location="${obj.dir}"/>
		<pathelement location="${generated.obj.dir}"/>
		<path refid="axis.classpath"/>
		<path refid="ext.classpath"/>
		<path refid="bundles.classpath"/>
	</path>

	<!-- Imports -->	
	<import file="${basedir}/init.build.xml"/>

	<!-- Build Targets -->
	<target name="build" depends="announce,jars"/>

	<target name="announce" >
		<exec executable="java">
			<arg value="-version"/>
		</exec>
	</target>

	<target name="jars" depends="gffs-webservices.jar"/>

	<target name="nutty-ant-requirement">
		<!-- the syntax for fileset is annoying and generally skips the
		top level directory, which we want.  this forces it to pack the
		files into the jar with "services/..." form. -->
		<mkdir dir="${basedir}/subdir"/>
                <copy todir="${basedir}/subdir/services">
                        <fileset dir="${basedir}/services" includes="**/*.wsdd"/>
                </copy>
        </target>

	<target name="genii.ws" depends="gffs-webservices.jar"/>

	<target name="gffs-webservices.jar" depends="genii.ws.compile,genii.wsdl.tools.compile,nutty-ant-requirement">
		<jar destfile="${lib.dir}/gffs-webservices.jar">
			<fileset dir="${generated.obj.dir}"/>
			<fileset dir="${basedir}/subdir"/>
			<fileset dir="${obj.dir}">
				<include name="edu/virginia/**/*"/>
			</fileset>
		</jar>
	</target>

	<target name="generate.ws.source" depends="genii.wsdl.tools">
		<ant antfile="${wsdl.dir}/common.build.xml"/>
		<ant antfile="${wsdl.dir}/geniiPullPoint.build.xml"/>
		<ant antfile="${wsdl.dir}/subscription.build.xml"/>
		<ant antfile="${wsdl.dir}/publisher-registration.build.xml"/>
		<ant antfile="${wsdl.dir}/geniiWSNBroker.build.xml"/>
		<ant antfile="${wsdl.dir}/rns/rns.build.xml"/>
		<ant antfile="${wsdl.dir}/deployment/gapp-description.build.xml"/>
		<ant antfile="${wsdl.dir}/deployment/deployer.build.xml"/>
		<ant antfile="${wsdl.dir}/byteio/rbyteio.build.xml"/>
		<ant antfile="${wsdl.dir}/byteio/sbyteio.build.xml"/>
		<ant antfile="${wsdl.dir}/byteio/sbyteio-factory.build.xml"/>
		<ant antfile="${wsdl.dir}/exported/exported-file.build.xml"/>
		<ant antfile="${wsdl.dir}/exported/exported-dir.build.xml"/>
		<ant antfile="${wsdl.dir}/exported/exported-root.build.xml"/>
		<ant antfile="${wsdl.dir}/rfork/rfork.build.xml"/>
		<ant antfile="${wsdl.dir}/container/container.build.xml"/>
		<ant antfile="${wsdl.dir}/exported/light-export.build.xml"/>
		<ant antfile="${wsdl.dir}/exported/fsproxy.build.xml"/>
		<ant antfile="${wsdl.dir}/bes/bes-activity.build.xml"/>
		<ant antfile="${wsdl.dir}/bes/bes.build.xml"/>
		<ant antfile="${wsdl.dir}/naming.build.xml"/>
		<ant antfile="${wsdl.dir}/authn/x509-authn.build.xml"/>
		<ant antfile="${wsdl.dir}/authn/jndi-authn.build.xml"/>
		<ant antfile="${wsdl.dir}/authn/kerb-authn.build.xml"/>
		<ant antfile="${wsdl.dir}/resolver/genii-resolver.build.xml"/>
		<ant antfile="${wsdl.dir}/queue/queue.build.xml"/>
		<ant antfile="${wsdl.dir}/certGenerator/certGenerator.build.xml"/>
		<ant antfile="${wsdl.dir}/tty/tty.build.xml"/>
		<ant antfile="${wsdl.dir}/pipe/pipe.build.xml"/>
		<ant antfile="${wsdl.dir}/iterator/ws-iterator.build.xml"/>
		<ant antfile="${wsdl.dir}/replicatedExport/rexport-file.build.xml"/>
		<ant antfile="${wsdl.dir}/replicatedExport/rexport-dir.build.xml"/>
		<ant antfile="${wsdl.dir}/replicatedExport/rexport-resolver.build.xml"/>
		<ant antfile="${wsdl.dir}/replicatedExport/rexport-resolver-factory.build.xml"/>
		<ant antfile="${wsdl.dir}/notification/enhancednbfactory.build.xml"/>
		<ant antfile="${wsdl.dir}/notification/enhancednb.build.xml"/>
	</target>

	<target name="genii.wsdl.tools" depends="genii.wsdl.tools.compile">
		<path id="wsdl-tools.classpath">
			<path refid="project.classpath"/>
		</path>
		<taskdef
			resource="edu/virginia/vcgr/genii/wsdl/ant/ant-tasks.properties"
			classpathref="wsdl-tools.classpath"/>
	</target>

	<target name="genii.compile" depends="init,genii.ws">
		<javac debug="${debug.on}" destdir="${obj.dir}"
			includeAntRuntime="${include.ant.runtime}">
			<src path="${src.dir}"/>
			<classpath refid="project.classpath"/>
			<include name="**/*.java"/>
		</javac>
		<copy todir="${obj.dir}">
			<fileset dir="${src.dir}">
				<include name="${default.compile.copy.includes}"/>
				<include name="config/tooldocs/description/*"/>
				<include name="config/tooldocs/man/*"/>
				<include name="config/tooldocs/usage/*"/>
			</fileset>
		</copy>
<!-- turned off since maybe not needed again.
		<copy todir="${bundles.home}/endorsed">
			<fileset dir="${ext.dir}">
				<include name="xmlsec*jar" />
			</fileset>
			<fileset dir="${bundles.home}">
				<include name="*log4j*jar" />
				<include name="*commons*loggi*jar" />
			</fileset>
		</copy>
-->
	</target>

	<target name="genii.ws.compile" depends="generate.ws.source">
		<javac debug="${debug.on}" destdir="${generated.obj.dir}"
			includeAntRuntime="${include.ant.runtime}">
			<src path="${generated.source.dir}"/>
			<classpath refid="project.classpath"/>
		</javac>
	</target>

	<target name="genii.wsdl.tools.compile" depends="init">
		<javac debug="${debug.on}" destdir="${obj.dir}"
			includeAntRuntime="${include.ant.runtime}">
			<src path="${src.dir}"/>
			<include name="edu/virginia/vcgr/genii/wsdl/**/*.java"/>
			<classpath refid="project.classpath"/>
		</javac>
		<copy todir="${obj.dir}">
			<fileset dir="${src.dir}"
				includes="${default.compile.copy.includes}"/>
		</copy>
	</target>

	<target name="clean" depends="init">
		<delete dir="${temporary.codegen.dir}"/>
		<delete dir="${wsdd.dir}"/>
		<delete dir="${dpages.dir}"/>
		<delete dir="${generated.source.dir}"/>
		<delete dir="${basedir}/subdir"/>
		<delete dir="${generated.obj.dir}"/>
                <delete>
                        <fileset dir="${obj.dir}" includes="**/*"/>
                </delete>
		<delete quiet="true">
			<fileset dir="${lib.dir}" includes="**/*.jar"/>
		</delete>
		<delete dir="${services.dir}" quiet="true"/>
		<delete file="${basedir}/jserver.sh"/>
		<delete file="${basedir}/runContainer.sh"/>
		<delete file="${basedir}/runContainer.bat"/>
		<delete file="${basedir}/grid"/>
		<delete file="${basedir}/grid.bat"/>
		<delete file="${basedir}/cert-tool"/>
		<delete file="${basedir}/cert-tool.bat"/>
		<delete file="${basedir}/jar-desc.xml"/>
		<delete file="${basedir}/jserver-jar-desc.xml"/>
		<delete>
			<fileset dir="${basedir}"
				includes="**/*.log"/>
			<fileset dir="${basedir}"
				includes="**/*.log.*" />
			<fileset dir="${bundles.home}"
				includes="endorsed/**/*" />
			<fileset dir="${basedir}"
				includes="unit-test-reports/**/*" />
		</delete>
	</target>
	
	<target name="init.secrun">
		<property file="${basedir}/build.secrun.properties"/>
		<mkdir dir="${secrun.scratch.dir}"/>
		<input
			message="Input password for certificate store ${secrun.certstore}?"
			addproperty="secrun.storepass"/>
	</target>

	<target name="register-ifs">
		<copy file="${basedir}/jni-libs/win32/IFS/nulmrx.sys"
			tofile="${env.SystemRoot}/system32/drivers/nulmrx.sys"/>
		<copy file="${basedir}/jni-libs/win32/IFS/nulmrxnp.dll"
			tofile="${env.SystemRoot}/system32/nulmrxnp.dll"/>
		<copy file="${basedir}/jni-libs/win32/IFS/GenesisIFSServer.exe"
			tofile="${basedir}/GenesisIFSServer.exe"/>

		<exec executable="cmd">
			<arg value="/c"/>
			<arg value="&quot;${basedir}/jni-libs/win32/IFS/editRegistry.bat&quot;"/>
			<arg value="&quot;${basedir}&quot;"/>
  		</exec>
	</target>

	<target name="api-doc" depends="build">
		<javadoc destdir="${basedir}/api-doc">
			<fileset dir="${basedir}/src">
				<include name="edu/virginia/**/*.java"/>
			</fileset>
		</javadoc>
	</target>

</project>
